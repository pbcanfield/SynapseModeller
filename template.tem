#load_file("stdrun.hoc")
#nrn_load_dll("*")
#load_file("*")
#objectvar membrane 
#objectvar time
#objectvar input[*]
#input[^] = new Vector()
#membrane = new Vector()
#time = new Vector()
#objectvar cell
#objectvar stim
#objectvar nc
#objectvar syn
#objectvar vclamp
#stim = new NetStim(0.5)
#stim.noise = 0.0
#cell = new *()
#cell.soma vclamp = new SEClamp(0.5) 
#cell.soma syn = new *(0.9)
#nc = new NetCon(stim, syn, 0, 0, 1)
objectvar membraneVtime!
objectvar time!
objectvar currents![*]
membraneVtime! = new Vector()
time! = new Vector()
currents![^] = new Vector()
membraneVtime!.record(&cell.soma.v(0.5))
time!.record(&t)
currents![^].record(&syn.~)
proc run!() {
    tstop = *
    v_init = * 
    vclamp.amp1 = v_init
    vclamp.dur1 = 999
    stim.interval = *
    stim.number = * 
    stim.start = *
    syn.@ = %
    run()
    time.resize(0)
    membrane.resize(0)
    input[^].resize(0)
    for(x = 0; x < time!.size(); x = x + 1) {
        time.append(time!.x[x])
    }
    for(x = 0; x < membraneVtime!.size(); x = x + 1) {
        membrane.append(membraneVtime!.x[x])
    }
    for(i = 0; i < *; i = i + 1) {
        for(x = 0; x < currents![i].size; x = x + 1) {
            input[i].append(currents![i].x[x])
        }
    }
    time!.resize(0)
    membraneVtime!.resize(0)
    currents![^].resize(0)
    printf("Run ! Complete\n")
}